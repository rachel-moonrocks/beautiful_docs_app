---
openapi: 3.0.1
info:
  description: The Beautiful Docs API V1 is a REST interface designed to transform
    the [Beautiful Docs repository](https://github.com/matheusfelipeog/beautiful-docs)
    into a structured and accessible API. This API provides access to the documentation
    resources curated by [matheusfelipeog](https://github.com/matheusfelipeog) and
    other developers. Built to enhance the usability of the original repository, this
    API simplifies the process of integrating and exploring high-quality documentation
    by offering endpoints tailored for easy access and interaction.
  termsOfService: https://beautiful-docs-app.onrender.com/terms
  contact:
    email: rachel@moonrocks.dev
  title: Beautiful Docs API V1
  version: v1
security:
- bearerAuth: []
paths:
  "/api/v1/documents":
    post:
      summary: Creates a document
      tags:
      - Documents
      parameters: []
      responses:
        '201':
          description: succesful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/documents"
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errors_422"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                      - documents
                      example: documents
                    attributes:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Nisi inventore eius at.
                        url:
                          type: string
                          format: uri
                          example: http://examples.com/nisi-inventore-eius-at
                        description:
                          type: string
                          example: A document illustrating the technicalities of Nisi
                            inventore eius at.
                        contributor:
                          type: string
                          example: username@github.com
    get:
      summary: Lists all documents
      tags:
      - Documents
      responses:
        '200':
          description: succesful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/documents"
        '404':
          description: documents not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errors"
  "/api/v1/documents/{id}":
    get:
      summary: Retrieves a document
      tags:
      - Documents
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: succesful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/documents"
        '404':
          description: document not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/errors"
servers:
- url: https://beautiful-docs-app.onrender.com
  variables:
    defaultHost:
      default: beautiful-docs-app.onrender
tags:
- name: Documents
  description: All the beautiful docs in one place
  externalDocs:
    description: Original source
    url: https://github.com/matheusfelipeog/beautiful-docs
components:
  schemas:
    documents:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: '99'
              type:
                type: string
                example: documents
              attributes:
                type: object
                properties:
                  title:
                    type: string
                    example: The Ruby Style Guide
                  url:
                    type: string
                    example: www.examples.com/ruby-style-guide
                  description:
                    type: string
                    example: A community-driven Ruby coding style guide
                  contributor:
                    type: string
                    example: username@github.com
                required:
                - url
    errors:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              source:
                type: object
                properties:
                  pointer:
                    type: string
                    example: "/documents/99"
              detail:
                type: string
                example: Document not found
              status:
                type: integer
                example: 404
    errors_422:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              source:
                type: object
                properties:
                  pointer:
                    type: string
                    example: "/documents"
              detail:
                type: string
                example: Invalid Request
              status:
                type: integer
                example: 422
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
