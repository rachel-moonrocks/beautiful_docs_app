---
http_interactions:
- request:
    method: get
    uri: https://api.github.com/repos/matheusfelipeog/beautiful-docs/readme
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.12.2
      Accept:
      - application/vnd.github.v3.raw
  response:
    status:
      code: 200
      message: OK
    headers:
      date:
      - Fri, 20 Dec 2024 19:16:13 GMT
      content-type:
      - application/vnd.github.v3.raw; charset=utf-8
      content-length:
      - '22347'
      cache-control:
      - public, max-age=60, s-maxage=60
      vary:
      - Accept,Accept-Encoding, Accept, X-Requested-With
      etag:
      - '"3fa0121fbd498365f54563dcecc0745d2b846fde"'
      last-modified:
      - Sun, 16 Jun 2024 01:25:07 GMT
      x-github-media-type:
      - github.v3; param=raw
      x-github-api-version-selected:
      - '2022-11-28'
      access-control-expose-headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes,
        X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO,
        X-GitHub-Request-Id, Deprecation, Sunset
      access-control-allow-origin:
      - "*"
      strict-transport-security:
      - max-age=31536000; includeSubdomains; preload
      x-frame-options:
      - deny
      x-content-type-options:
      - nosniff
      x-xss-protection:
      - '0'
      referrer-policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      content-security-policy:
      - default-src 'none'
      server:
      - github.com
      x-ratelimit-limit:
      - '60'
      x-ratelimit-remaining:
      - '46'
      x-ratelimit-reset:
      - '1734722389'
      x-ratelimit-resource:
      - core
      x-ratelimit-used:
      - '14'
      accept-ranges:
      - bytes
      x-github-request-id:
      - D65A:313DBC:F5712E0:F9C19F4:6765C27C
    body:
      encoding: UTF-8
      string: "# Beautiful Docs\n\nI love documentation. If you work with/are writing
        code intended for usage and consumption by more than one person, you should
        love it, too. Documentation and other resources will make or break the success
        of your project. And the more open and collaborative you want development
        to be, the more crucial docs become.\n\nWith that in mind, here's a list of
        docs and other developer resources that myself and others find particularly
        useful, well-written, and otherwise \"beautiful.\" May they serve to inspire
        you when writing and designing yours. Thanks to various contributors, we now
        also have sections dedicated to [Writing about Documentation](#writing-about-docs)
        and [Tools for Generating Docs](#generating-docs).\n\nThis should be updated
        fairly regularly. As usual, **pull requests are encouraged**. \n* If you're
        contributing a link, be sure to include a few words on why you're adding it
        and some sort of self-attribution so that people can know from whom it came.\n*
        All docs are listed in the order they were added. Keep this order when submitting
        your PR. \n\n[Mark](https://twitter.com/pharkmillups)\n\n### And Now For The
        Docs \n\n* [Redis Commands](https://redis.io/commands/) - Most of the Redis
        docs are exceptional, but this section really epitomizes the combination of
        good design and usability. And all the individual command pages give you the
        ability to test things out without leaving the page. Pretty close to perfect.\n*
        [GitHub Developer Docs](https://docs.github.com/en) - I don't always get excited
        about accordion-based navigation, but when I do...\n* [Dropwizard](https://www.dropwizard.io/)
        - Beautiful and concise; another Bootstrap joint. (contributed by [mrtazz](https://twitter.com/#!/mrtazz)).\n*
        [Riak Pipe README](https://github.com/basho/riak_pipe/blob/develop/README.md)
        - The simplicity of READMEs means that you can't obscure shitty content with
        flashy design. This one is written by my Basho colleague [Bryan Fink](https://twitter.com/#!/hobbyist)
        and should be committed to memory as an excellent example of how to write
        READMEs.\n* [Learn You Some Erlang](https://learnyousomeerlang.com/content)
        (contributed by [@lenary](https://twitter.com/lenary)) (It should also be
        noted that LYSE was inspired by Miran Lipovaƒça's [Learn You A Haskell](http://learnyouahaskell.com/).)\n*
        [Django Documentation](https://docs.djangoproject.com/en/) - (contributed
        by [@bretthoerner](https://twitter.com/bretthoerner))\n* [Clojuredocs.org](https://clojuredocs.org)
        (contributed by [@mrb_bk](https://twitter.com/#!/mrb_bk))\n* [FreeBSD Handbook](https://docs.freebsd.org/en/books/handbook/)
        - Clean and direct documentation of an OS. (contributed by [@mrtazz](https://twitter.com/#!/mrtazz))\n*
        [Ruby on Rails Guides](https://guides.rubyonrails.org/) - (contributed by
        [@seancribbs](https://twitter.com/#!/seancribbs))\n* [Stripe Documentation](https://stripe.com/docs)
        and [Full API Documentation](https://stripe.com/docs/api) - Multiple languages,
        example code, good detail on the API; especially love how the API docs show
        examples for curl and their supported client libraries. (contributed simultaneously
        by [@tnm](https://twitter.com/#!/tnm) and [@technoweenie](https://twitter.com/#!/technoweenie))\n*
        [Librato Developer Docs](https://www.librato.com/docs/api/) - Librato's RESTful
        API documentation. (contributed by [@josephruscio](https://twitter.com/josephruscio))\n*
        [CoffeeScript](https://coffeescript.org/) - (contributed by [@joedevivo](https://twitter.com/#!/joedevivo))\n*
        [Why's (Poignant) Guide to Ruby](https://poignant.guide/) - (contributed by
        [@joedevivo](https://twitter.com/#!/joedevivo))\n* [Twitter Bootstrap](https://getbootstrap.com/)
        - Documented the project using the project. (contributed by [@kylewest](https://twitter.com/kylewest))\n*
        [hogan.js](https://twitter.github.io/hogan.js/) - Simple and Beautiful. (contributed
        by [@kylewest](https://twitter.com/kylewest))\n* [Scala Documentation](https://docs.scala-lang.org/)
        - Beautifully-styled Scala documentation site. (Contributed by [David M. Lee](https://github.com/leedm777))\n*
        [Linode Guides and Tutorials](https://www.linode.com/docs/) (contributed by
        [@davidmatas](https://twitter.com/#!/davidmatas))\n* [Symfony Docs](https://symfony.com/doc/current/)
        (contributed by [Rodney Keeling](https://github.com/rodneykeeling))\n* [Underscore.js](https://underscorejs.org/)
        - Simple, clean, single page. (contributed by [@twe4ked](http://twitter.com/twe4ked))\n*
        [Qt](https://doc.qt.io/) - Very comprehensive documentation with tutorials
        and guides and great examples. (contributed by [@nikhilcutshort](https://twitter.com/nikhilcutshort))\n*
        [Savon.rb](https://www.savonrb.com/) - (contributed by [Mathias Meyer](https://twitter.com/#!/roidrage))\n*
        [Android Developer Documentation](https://developer.android.com/guide) (contributed
        by [Rajeev N B @rBharshetty](https://twitter.com/#!/rBharshetty))\n* [Postmark
        Developer Docs](https://postmarkapp.com/developer) - Simple, easy to navigate,
        informative.\n* [Twitter Developers Docs](https://developer.twitter.com/en/docs)
        - In-depth and very well organized. (contributed by [@tsantero](https://twitter.com/#!/tsantero))\n*
        [GitHub Styleguide](https://styleguide.github.com/) - Pragmatic styleguide
        with sections on Ruby, JavaScript and CSS. (contributed by [@lenary](https://twitter.com/#!/lenary))\n*
        [Moment.js](https://momentjs.com/docs/) - Thorough, well-designed, and excellent
        use of top-nav. (contributed by [@joshuapoehls](https://twitter.com/#!/joshuapoehls))\n*
        [Solarized](https://ethanschoonover.com/solarized/) - Beautiful documentation
        about a color scheme, using the color scheme from [Ethan Schoonover](https://github.com/altercation).
        (contributed by [@seancribbs](http://twitter.com/seancribbs))\n* [Ember.js](https://guides.emberjs.com/)
        - The overall navigation could be done a bit better but the presentation and
        readability is quite nice. (contributed by [@cmeik](https://twitter.com/cmeik))\n*
        [Riak Docs](https://docs.riak.com/) - Well-designed, excellent use of versioning,
        integrated search, and much more.\n* [Go By Example](https://gobyexample.com/)
        - Clean, simple, and extensive. These docs that make you want to learn Go
        just because they make it so straightforward.\n* [gevent API Docs](https://www.gevent.org/intro.html)
        - Clean, polished docs for gevent. (contributed by [rubik](https://github.com/rubik))\n*
        [Riemann](https://riemann.io/) - Great design, easy to read, and very thorough
        with introductory and advanced topics.\n* [Pretty RFC](https://pretty-rfc.herokuapp.com/)
        - Reworked [IETF](http://www.ietf.org) documents for easier viewing.\n* [Vagrant](https://www.vagrantup.com/docs/)
        - Well organized, easy to read, attractive design. ([@clstokes](https://twitter.com/clstokes))\n*
        [Wolfram Language](https://reference.wolfram.com/language/) - Nice top-level
        navigation in a grid layout. Topics grouped by color, each with a relevant
        graphic and on-click menu of sub-topics. (contributed by [troytop](http://github.com/troyhop))\n*
        [Lisp Flavored Erlang: Quick Start](https://lfe.gitbooks.io/quick-start/content/)
        - Attractive presentation, nice jumpstart for the language. (contributed by
        [@macintux](https://twitter.com/macintux))\n* [Thinking Forth](http://thinking-forth.sourceforge.net)
        - Forth is now largely eclipsed by Factor, but the book remains an inspiring
        look at the ideas behind this stack-based language. (contributed by [@macintux](https://twitter.com/macintux))\n*
        [Packer Documentation](https://www.packer.io/docs) - These are just lovely.\n*
        [Abjad: Modeling Music in Python](https://abjad.github.io/) - Clean styling,
        and impressive integration of figures and diagrams. (contributed by [@adorsk](https://github.com/adorsk))\n*
        [SqlAlchemy](https://docs.sqlalchemy.org/) - One of the most comprehensive
        pieces of documentation I've ever seen, with excellent linking and layout.
        (contributed by [@adorsk](https://github.com/adorsk))\n* [Sonata Project](https://docs.sonata-project.org/)
        - All the Sonata Project bundles for Symfony2 on a single page. These have
        a nice, clear layout. (contributed by [@NoScopie](https://github.com/NoScopie))\n*
        [Laravel](https://laravel.com/docs) - Easily-readable and well-organized docs.
        Navigation is well formatted and articles are easy to consume. (contributed
        by [@ToddSmithSalter](https://github.com/toddsmithsalter))\n* [FullCalendar](https://fullcalendar.io/docs)
        ‚Äì Concise overview of all APIs on a single page, and in-depth descriptions
        for each. (contributed by [@gr2m](https://github.com/gr2m/))\n* [Rust Guides](https://doc.rust-lang.org/book/README.html)
        - Rust is a stable and memory-save language and the docs (written by [Steve
        Klabnik](https://github.com/steveklabnik)) are clearly a high priority. The
        guides in particular illustrate core concepts of the standard library in a
        conversational, accessible style. (contributed by [Nick Cox](https://github.com/thenickcox)\n*
        [MongoDB Manual](https://www.mongodb.com/docs/manual/) - Easy to navigate,
        clean, carefully and well designed manual. (contributed by [ericbn](https://github.com/ericbn))\n*
        [Mailgun Documentation](https://documentation.mailgun.com) - Email service
        for developers. Language selector, API code samples, editable in the browser,
        created with Sphinx. (contributed by [@leemunroe](https://github.com/leemunroe))\n*
        [Grav Documentation](https://learn.getgrav.org/) - Documentation for Grav,
        a modern open source flat-file CMS. Tightly integrated with GitHub in markdown
        format, with quick search and highlight. (contributed by [@rhuk](https://twitter.com/rhuk))\n*
        [Mailjet API guides](https://dev.mailjet.com/) - Great documentation with
        generated code samples using Slate from Tripit\n* [Atlassian GIT Tutorials](https://www.atlassian.com/git/)
        - Documentation and tutorials on Git. I like their layout. It is simple and
        focused on explaining the concepts with good diagrams, tutorials and glossary.
        (contributed by [@vaseehh](https://twitter.com/vaseehh))\n* [Digital Ocean
        API Docs](https://docs.digitalocean.com/reference/api/) - These docs are stellar.
        Examples are abundant and the organization makes each component of the API
        easy to reason about. (contributed by [@jasonaibrahim](https://github.com/jasonaibrahim))\n*
        [The LTTng Documentation](https://lttng.org/docs) - The whole documentation
        of the open source LTTng project on a single page (one page per project release).
        Features are: sparse style with pleasant colors, good information structure,
        auto-scrolling navigation, mobile-friendly, dedicated example boxes, glossary,
        tight integration with the [online man pages](https://lttng.org/man/) of the
        same version which are rendered with the same style. [Source](https://github.com/lttng/lttng-docs)
        is written in AsciiDoc (project's man pages too), with custom inline macros
        for specific features. (contributed by [@eepp](https://eepp.ca/))\n* [DocRaptor](https://docraptor.com/documentation)
        Covers HTML-to-PDF API language wrappers, styling instructions and core API
        docs.\n* [Go Programming Language Docs](https://go.dev/doc/) - These docs
        are simple, well-organized, and effective. (contributed by [Ed Bacher](https://github.com/evbacher))\n*
        [Sequelize](https://sequelize.org/) - Simple, clear and well-structured docs
        with a complete Class Reference and listing of all public methods. (contributed
        by [@bandantonio](https://github.com/bandantonio))\n* [Vue.js Docs](https://vuejs.org/)
        - The Progressive JavaScript Framework: An approachable, performant and versatile
        framework for building web user interfaces. (contributed by [@jinjiang](https://github.com/jinjiang))\n*
        [Posit Documentation](https://docs.posit.co/) - Clean, simple, and easy on
        the eyes. (contributed by [@foxnic](https://github.com/foxnic))\n* [FastAPI](https://fastapi.tiangolo.com)
        - Python framework for building APIs with beautiful and complete documentation.
        (contributed by [@jrwaine](https://github.com/jrwaine))\n* [Circles, Sines
        and Signals](https://jackschaedler.github.io/circles-sines-signals/) - A Compact
        Primer on Digital Signal Processing. (contributed by [@PharkMillups](https://github.com/PharkMillups))\n*
        [PostgreSQL](https://www.postgresql.org/docs/current/index.html) - One of
        the most reliable sets of documentation available. There is rarely a need
        to go outside the documentation. (contributed by [@dalryan](https://github.com/dalryan))\n*
        [Svelte](https://svelte.dev/docs/introduction) - Svelte shifts as much work
        as possible out of the browser and into your build step. No more manual optimisations
        ‚Äî just faster, more efficient apps. (contributed by [@0Ared](https://github.com/0Ared/))\n\n###
        Writing about Docs\n\n* [Designing Great API Docs](https://www.pixelstech.net/article/1331352900-Designing-Great-API-Docs)
        - Blog post by [@jamesyu](https://twitter.com/jamesjyu) about what he/Parse
        finds essential in API Docs. (contributed by [@hobbyist](https://twitter.com/https://twitter.com/#!/hobbyist))\n*
        [TomDoc](http://tomdoc.org/) - A specification for Ruby library API docs by
        [@mojombo](https://twitter.com/mojombo) (contributed by [@lenary](https://twitter.com/#!/lenary))\n*
        [Write the Docs](https://www.writethedocs.org/) - A conference for authors
        of technical documentation. (contributed by [@macintux](https://twitter.com/macintux))\n*
        [Writing Great Documentation](https://jacobian.org/series/great-documentation/)
        - Covers a variety of topics relating to writing good documentation such as
        content, style, formatting and so on. (contributed by [Paul A. Wilson](http://github.com/paulalexwilson))\n*
        [Google Developer Documentation Style Guide](https://developers.google.com/style)
        - The best style guide I've seen since the Sun Style Guide. I'm agitating
        to get my team to replace the MMoS with this as the place to look for style
        guidance that doesn't exist in our team's style guide. (contributed by [@carolinakinetic](https://github.com/carolinakinetic))\n*
        [API Blueprint](https://github.com/apiaryio/api-blueprint) - A powerful high-level
        API description language for web APIs. (contributed by [@PharkMillups](https://github.com/PharkMillups))\n*
        [Di√°taxis](https://diataxis.fr/) - A systematic framework for technical documentation
        authoring. (contributed by [@matheusfelipeog](https://github.com/matheusfelipeog))\n\n###
        Generating Docs\n\n* [docco](https://ashkenas.com/docco/) - Pretty docs from
        source code comments with ports for many languages. (contributed by [@kylewest](https://twitter.com/kylewest))\n*
        [Sphinx](https://www.sphinx-doc.org/) - Comprehensive documentation tool using
        restructuredText with beautiful HTML and PDF output. (contributed by [@nikhilcutshort](https://twitter.com/nikhilcutshort))\n*
        [MkDocs](https://www.mkdocs.org/) - Documentation with Markdown, written in
        Python. (contributed by [ericbn](https://github.com/ericbn))\n* [Read the
        Docs](https://readthedocs.org/) - Hosted docs using Sphinx or MkDocs, supports
        translations and finding docs for specific software versions. Used by the
        Django Docs. (contributed by [Stephen Paulger](https://github.com/stephenpaulger))\n*
        [ApiGen](https://www.apigen.org/ApiGen/) - Creates clean API documentation
        from PHP source code (contributed by [bryceadams](http://bryce.se/))\n* [docgenerator](https://github.com/Ralt/docgenerator/blob/master/README.md)
        - Organize your documentation in Markdown files. (contributed by [Florian
        Margaine](http://margaine.com))\n* [dexy](https://www.dexy.it) - Extensible
        documentation/report generator supporting multiple programming languages and
        several input and output formats. (contributed by [troytop](http://github.com/troytop))\n*
        [Slate](https://github.com/slatedocs/slate) - Static API documentation creation
        tool from the team at Tripit.\n* [MireDot](http://www.miredot.com) - REST
        API documentation generator for Java. Plugs into your build process and generates
        a searchable html page. (contributed by [bertvh](https://github.com/bertvh))\n*
        [codo](https://github.com/coffeedoc/codo) - CoffeeScript API documentation
        generator, similar to YARD. (contributed by [Logan Koester](http://github.com/logankoester))\n*
        [Flatdoc](https://ricostacruz.com/flatdoc/) - Create well designed open source
        documentation from Github repository README files or simple Markdown files.
        (contributed by [@moore](http://twitter.com/moore))\n* [GitBook](https://github.com/GitbookIO/gitbook)
        - Utility for generating documentation, books and exercises using GitHub/Git
        and Markdown. (contributed by [Samy Pess√©](https://github.com/SamyPesse))\n*
        [Daux](https://daux.io/) - A documentation generator that uses a simple folder
        structure and Markdown files to create custom documentation on the fly. It
        helps you create great looking documentation in a developer friendly way.
        (contributed by [veshinak](https://github.com/veshinak))\n* [comment.js](https://github.com/dciccale/comment.js)
        - Simple API documentation generator. (contributed by [@dciccale](https://github.com/diccale))\n*
        [phpDocumentor](https://www.phpdoc.org/) - phpDocumentor enables you to generate
        documentation from your PHP source code. (contributed by [shivamdixit](http://shivamdixit.com))\n*
        [Hologram](https://trulia.github.io/hologram/) - Hologram is a Ruby gem that
        parses comments in your CSS and helps you turn them into a beautiful style
        guide. (contributed by [@jchild3rs](http://github.com/jchild3rs))\n* [Middleman](https://middlemanapp.com/)
        - Static site generator using all the shortcuts and tools in modern web development.
        (contributed by [Sota Yamashtia](https://github.com/sotayamashita))\n* [documentation.js](https://github.com/documentationjs/documentation)
        - Generates documentation from JavaScript source code. (contributed by [tmcw](https://github.com/tmcw))\n*
        [SassDoc](http://sassdoc.com/) - A Sass documentation generator that utilizes
        inline comments to make pretty and powerful docs. (contributed by [Hugo Giraudel](https://github.com/HugoGiraudel))\n*
        [Pickles](https://www.picklesdoc.com/) - Pickles is an open source living
        documentation generator that works on feature files written in the Gherkin
        language.\n* [ApiDoc](https://github.com/apidoc/apidoc) RESTful web API Documentation
        Generator that creates documentation from API descriptions in your source
        code. (contributed by [Trenton Broughton](https://github.com/trenton42))\n*
        [Documentation theme for Jekyll](https://idratherbewriting.com/documentation-theme-jekyll/)
        - Documentation theme built on Jekyll. Includes detailed notes on how to tackle
        nearly every technical documentation scenario, from single sourcing to conditional
        filtering, PDF output, relative links, and more.\n* [JSDoc](https://jsdoc.app/)
        - Generate JavaScript API documentation directly from source code comments.
        Also useful as a style guide for JS commenting, in general. Google uses a
        version of JSDoc tags for its [Closure compiler](https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler).\n*
        [Asciidoctor](https://asciidoctor.org/) - Asciidoctor is a fast text processor
        and publishing toolchain for converting AsciiDoc content to HTML5, DocBook
        5 (or 4.5) and other formats. (contributed by [ThomasG77](https://github.com/ThomasG77))\n*
        [Bookdown](https://bookdown.org/) - A open-source (GPL-3) R package to facilitate
        writing books and long-form articles/reports with R Markdown. Support for
        languages other than R, including C/C++, Python, and SQL, etc. (contributed
        by [ThomasG77](https://github.com/ThomasG77))\n* [Pandoc](https://pandoc.org/)
        If you need to convert files from one markup format into another, pandoc is
        your swiss-army knife. Can generate documentation from most common markup
        languages. (contributed by [ThomasG77](https://github.com/ThomasG77))\n* [LaTeX](https://www.latex-project.org/)
        LaTeX is a typesetting system that has been around for almost 40 years and
        still very popular mostly in academia settings. Its strongest strength is
        in its capacity and flexibility in creating beautiful mathematical formulas.
        (contributed by [Tao Li](https://github.com/taolicd))\n* [gd2md-html](https://github.com/evbacher/gd2md-html/wiki)
        - gd2md-html is a free Google Docs add-on that converts a formatted Google
        Doc to a simple, readable Markdown or HTML text file. gd2md-html lets you
        use Google Docs' editing, formatting, and collaboration tools before you publish
        to a Markdown or HTML platform. (contributed by [Ed Bacher](https://github.com/evbacher))\n*
        [Documize](https://github.com/documize/community) - One place to author, approve,
        publish documentation (contributed by [HarveyKandola](https://github.com/HarveyKandola))\n*
        [ESDoc](https://esdoc.org/) - Documentation generator for JavaScript. Similar
        to JSDoc, but provides more useful features and stylish look and feel. (contributed
        by [@bandantonio](https://github.com/bandantonio))\n* [Doxygen](https://www.doxygen.nl/)
        - Doxygen is the de facto standard tool for generating documentation from
        almost all popular programming languages. (contributed by [@nocomplexity](https://github.com/nocomplexity))\n*
        [Ignite](https://github.com/intuit/Ignite) - Markdown documentation tool built
        around react components as first class plugins. Docs generateed using [bulma](https://bulma.io/).
        (contributed by [hipstersmoothie](https://github.com/hipstersmoothie))\n*
        [Docusaurus](https://docusaurus.io/) - A project by Facebook for building,
        deploying, and maintaining open source project websites easily. Docusaurus
        currently provides support to help your website use translations, search,
        and versioning, along with some other special documentation markdown features.
        (contributed by [akhildaphara](https://github.com/akhildaphara))\n* [Scramble](https://scramble.dedoc.co/)
        - Scramble generates API documentation for Laravel project. Without requiring
        you to manually write PHPDoc annotations. (contributed by [danie1net0](https://github.com/danie1net0))\n*
        [VuePress](https://vuepress.vuejs.org) - Vue-powered static site generator,
        simplicity first and performant. (contributed by [matheusfelipeog](https://github.com/matheusfelipeog))\n*
        [VitePress](https://vitepress.dev/) - VitePress is a Static Site Generator
        designed for building fast, simple, powerful and content-centric websites.
        (contributed by [matheusfelipeog](https://github.com/matheusfelipeog))\n*
        [Mintlify](https://mintlify.com/) - Hosted docs using Markdown and MDX (contributed
        by [arnehuang](https://github.com/arnehuang))\n"
  recorded_at: Fri, 20 Dec 2024 19:16:13 GMT
recorded_with: VCR 6.3.1
